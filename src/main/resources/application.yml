server:
  port: 8080

# --- DATABASE CONFIGURATION ---
spring:
  application:
    name: oath2-login-demo
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/oath2_login_demo?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
    # show-sql: true # 'TRACE org.hibernate.type.descriptor.sql' below is more detailed

# --- OAUTH2 CONFIGURATION ---
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 67843765835-nor89us21akvr24ll21og85inqvfpqjg.apps.googleusercontent.com
            client-secret: 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
            scope:
              - openid
              - profile
              - email
          github:
            client-id: Ov23lirangqllIBf8FgC
            client-secret: ee4932afb78c4c0a216ca3491a7e122271cb7cfd
            scope:
              - read:user
              - user:email
        provider:
          google:
            issuer-uri: https://accounts.google.com

# --- LOGGING CONFIGURATION ---
logging:
  level:
    # Set root to INFO to see our custom logs and default Spring Boot logs
    root: INFO
    # Set Spring Security to DEBUG for detailed security flow logging
    org.springframework.security: DEBUG
    # Set Hibernate SQL parameter binding to TRACE for detailed query info
    org.hibernate.type.descriptor.sql: TRACE